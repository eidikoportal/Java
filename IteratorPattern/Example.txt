java.util.Iterator
java.util.Enumeration


 Internal Iterators
• The collection itself offers methods to allow a client to visit different objects within the collection. For example, the java.
util.ResultSet class contains the data and also offers methods such as next to navigate through the item list.
• There can be only one iterator on a collection at any given time.
• The collection has to maintain or save the state of iteration.

External Iterators
• The iteration functionality is separated from the collection and kept inside a different object referred to as an iterator. Usually,
the collection itself returns an appropriate iterator object to the client depending on the client input. For example, the java.
util.Vector class has its iterator defined in the form of a separate object of type Enumeration. This object is returned
to a client object in response to the elements() method call.
• There can be multiple iterators on a given collection at any given time.
• The overhead involved in storing the state of iteration is not associated with the collection. It lies with the exclusive Iterator
object.

Use the Iterator pattern:
• To access an aggregate object’s contents without exposing its internal representation.
• To support multiple traversals of aggregate objects.
• To provide a uniform interface for traversing different aggregate structures (that is, to support polymorphic iteration).