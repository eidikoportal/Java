package test;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import java.util.Scanner;
import java.util.TreeMap;

public class test {

//Find max difference bwtween two distinct prime numbers from a given range(L,R) with some constrainst
	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		//System.out.println("Enter the test cases");
		int n = sc.nextInt();
		boolean flag=false;
		List<Integer> arr = new ArrayList<Integer>();
		//System.out.println("Enter the L and R with 2 spaces in between the integers");
		sc.nextLine();
		for(int i=0;i<n;i++){
			String s = sc.nextLine();
			if(!s.isEmpty()){
				flag = true;
				int L=0;
				int R=0;
				try{
					String sp[]=s.split(" ",2);
					if(sp!=null){
						L = sp[0]!=null?Integer.parseInt(sp[0]):0;
					    R = sp[1]!=null?Integer.parseInt(sp[1].trim()):0;
					    if(!(L>=2 && L<=R && R>=L && R<=1000000)){
					    	flag=false;
					    }
					    arr.add(L);
						arr.add(R);
					} 
				}catch(NumberFormatException e){
					System.out.println("number format exception");
				}
				
			} else{
				System.out.println("string is empty");
			}
		}
		if(n>=1 && n<=10){
			if(flag){
					maxDiffPrimeNum(n,arr);
			}
		}
		
}
	public static void maxDiffPrimeNum(int n,List<Integer> ls) {
		for(int k=1;k<=ls.size();k=k+2){
			    int low = ls.get(k-1);
				int high = ls.get(k);
				ArrayList<Integer> a = new ArrayList<Integer>();
				while(low <= high){
					boolean flag = false;
					for(int i=2;i<=low/2;++i){
						if(low%i == 0){
							flag = true;
							break;
						}
					}
					if(!flag && low!=0 && low!=1){
						//System.out.println(low+" ");
						a.add(low);
					}
					++low;
				}
				if(a.isEmpty()){
					System.out.println(-1);
				}else if(a.size() == 1){
					System.out.println(0);
				}
				else{
					System.out.println(a.get(a.size()-1) - a.get(0));
				}
				
			
		}
	}
	

}
